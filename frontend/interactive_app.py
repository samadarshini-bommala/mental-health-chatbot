import streamlit as st
import json
import requests

st.set_page_config(page_title="üß† Mental Health Chatbot")

# Background styling
st.markdown("""
<style>
[data-testid="stAppViewContainer"] {
    background-image: url("https://raw.githubusercontent.com/samadarshini-bommala/mental-health-chatbot/main/frontend/background.png");
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center;
    background-attachment: fixed;
}
</style>
""", unsafe_allow_html=True)

st.title("üß† Mental Health Support - Interactive Mode")

# Language selection
language = st.selectbox("Choose your language:", ["English", "Spanish", "French", "German", "Hindi"])
st.session_state.language = language

# Load questions
with open("questions.json", "r") as f:
    all_questions = json.load(f)

# Language translations for questions
translations = {
    "Spanish": [
        "¬øCu√°l es tu edad?",
        "¬øTe sientes c√≥modo discutiendo tus emociones con otros?",
        "¬øHas sido diagnosticado con alguna condici√≥n de salud mental?",
        "¬øCrees que tu salud mental afecta tu productividad?",
        "¬øHas buscado ayuda profesional en el pasado?",
        "¬øEst√°s abierto a probar nuevas opciones de apoyo de salud mental?",
        "¬øQu√© tipo de apoyo sientes que te ayudar√≠a ahora?"
    ],
    "French": [
        "Quel est votre √¢ge?",
        "Vous sentez-vous √† l'aise de parler de vos √©motions avec les autres?",
        "Avez-vous √©t√© diagnostiqu√© avec des troubles de sant√© mentale?",
        "Croyez-vous que votre sant√© mentale affecte votre productivit√©?",
        "Avez-vous d√©j√† demand√© de l'aide professionnelle?",
        "√ätes-vous ouvert √† essayer de nouvelles options de soutien en sant√© mentale?",
        "Quel type de soutien pensez-vous qui vous aiderait maintenant?"
    ],
    "German": [
        "Wie alt sind Sie?",
        "F√ºhlen Sie sich wohl dabei, Ihre Gef√ºhle mit anderen zu besprechen?",
        "Wurden Sie mit psychischen Erkrankungen diagnostiziert?",
        "Glauben Sie, dass Ihre psychische Gesundheit Ihre Produktivit√§t beeinflusst?",
        "Haben Sie schon professionelle Hilfe in Anspruch genommen?",
        "Sind Sie offen f√ºr neue Unterst√ºtzungsangebote zur psychischen Gesundheit?",
        "Welche Art von Unterst√ºtzung w√ºrde Ihnen jetzt helfen?"
    ],
    "Hindi": [
        "‡§Ü‡§™‡§ï‡•Ä ‡§â‡§Æ‡•ç‡§∞ ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•à?",
        "‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™ ‡§¶‡•Ç‡§∏‡§∞‡•ã‡§Ç ‡§ï‡•á ‡§∏‡§æ‡§• ‡§Ö‡§™‡§®‡•Ä ‡§≠‡§æ‡§µ‡§®‡§æ‡§ì‡§Ç ‡§™‡§∞ ‡§ö‡§∞‡•ç‡§ö‡§æ ‡§ï‡§∞‡§®‡•á ‡§Æ‡•á‡§Ç ‡§∏‡§π‡§ú ‡§π‡•à‡§Ç?",
        "‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™‡§ï‡•ã ‡§ï‡§ø‡§∏‡•Ä ‡§Æ‡§æ‡§®‡§∏‡§ø‡§ï ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡•ç‡§•‡§ø‡§§‡§ø ‡§ï‡§æ ‡§®‡§ø‡§¶‡§æ‡§® ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§π‡•à?",
        "‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™‡§ï‡•ã ‡§≤‡§ó‡§§‡§æ ‡§π‡•à ‡§ï‡§ø ‡§Ü‡§™‡§ï‡§æ ‡§Æ‡§æ‡§®‡§∏‡§ø‡§ï ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§Ü‡§™‡§ï‡•Ä ‡§â‡§§‡•ç‡§™‡§æ‡§¶‡§ï‡§§‡§æ ‡§ï‡•ã ‡§™‡•ç‡§∞‡§≠‡§æ‡§µ‡§ø‡§§ ‡§ï‡§∞‡§§‡§æ ‡§π‡•à?",
        "‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™‡§®‡•á ‡§™‡§π‡§≤‡•á ‡§™‡•á‡§∂‡•á‡§µ‡§∞ ‡§Æ‡§¶‡§¶ ‡§≤‡•Ä ‡§π‡•à?",
        "‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™ ‡§Æ‡§æ‡§®‡§∏‡§ø‡§ï ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ ‡§ï‡•á ‡§®‡§è ‡§µ‡§ø‡§ï‡§≤‡•ç‡§™‡•ã‡§Ç ‡§ï‡•ã ‡§Ü‡§ú‡§º‡§Æ‡§æ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§§‡•à‡§Ø‡§æ‡§∞ ‡§π‡•à‡§Ç?",
        "‡§Ü‡§™‡§ï‡•ã ‡§Ö‡§≠‡•Ä ‡§ï‡§ø‡§∏ ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ ‡§ï‡•á ‡§∏‡§Æ‡§∞‡•ç‡§•‡§® ‡§ï‡•Ä ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï‡§§‡§æ ‡§Æ‡§π‡§∏‡•Ç‡§∏ ‡§π‡•ã‡§§‡•Ä ‡§π‡•à?"
    ]
}

questions = all_questions if language == "English" else translations.get(language, all_questions)

# Session state setup
if "answers" not in st.session_state:
    st.session_state.answers = []
if "feedback" not in st.session_state:
    st.session_state.feedback = ""

# Survey Section
st.header("üìù Complete the Survey")

# Language selection
language = st.selectbox("Choose your language:", ["English", "Spanish", "French", "German", "Hindi"])
st.session_state.language = language
with st.form("survey_form"):
    user_responses = []
    for i, q in enumerate(questions):
        st.markdown(
            f"""
            <div style='background-color: #f0f9ff; padding: 10px; border-radius: 8px; font-size: 15px; margin-bottom: 10px;'>
                <strong>{q}</strong>
            </div>
            """,
            unsafe_allow_html=True
        )

        if any(kw in q.lower() for kw in ["diagnosed", "comfortable", "believe your productivity", "sought professional help", "open to trying"]):
            answer = st.radio("", ["Yes", "No"], key=f"q_{i}")
        elif "support do you feel would help you right now" in q.lower():
            answer = st.text_input("", key=f"q_{i}")
        else:
            answer = st.text_input("", key=f"q_{i}")
        user_responses.append({"question": q, "answer": answer})

    submitted = st.form_submit_button("Submit Survey")
    if submitted:
        st.success("‚úÖ Thank you for submitting the survey!")
        st.session_state.answers = user_responses
        try:
            response = requests.post(
                "http://127.0.0.1:8000/generate_feedback",
                json={"responses": st.session_state.answers, "language": st.session_state.language}
            )
            feedback_text = response.json().get("feedback", "Sorry, something went wrong.")
            feedback_text = feedback_text.replace(
                "‚ö†Ô∏è I'm sorry, I can only generate feedback for mental health-related questions.", ""
            ).strip()
            
            # Always store feedback on submission
            st.session_state.feedback = feedback_text
        except Exception as e:
            st.session_state.feedback = f"Error: {e}"

# Display Support Summary
if st.session_state.feedback:
    st.subheader("Your Support Summary")
    st.markdown(st.session_state.feedback)

# Follow-up interaction
followup = st.chat_input("You can ask more questions here...")
if followup:
    keywords = [
        "anxiety", "stress", "mental", "therapy", "depression", "health",
        "emotion", "mood", "trauma", "wellbeing", "self-care", "counseling",
        "burnout", "grief", "isolation", "panic", "fear", "support",
        "psychologist", "psychiatrist", "diagnosis", "mental illness"
    ]
    if any(word in followup.lower() for word in keywords):
        try:
            response = requests.post(
                "http://127.0.0.1:8000/generate_feedback",
                json={"responses": st.session_state.answers + [{"question": followup, "answer": followup}], "language": st.session_state.language}
            )
            followup_reply = response.json().get("feedback", "Sorry, something went wrong.")
        except Exception as e:
            followup_reply = f"Error: {e}"
    else:
        followup_reply = "I'm sorry, I can only answer questions related to mental health. üí¨"

    with st.chat_message("user"):
        st.markdown(f"""
        <div style='background-color: #e6f7ff; padding: 10px; border-radius: 8px;'>
            {followup}
        </div>
        """, unsafe_allow_html=True)
    with st.chat_message("assistant"):
        st.markdown(f"""
        <div style='background-color: #fff7e6; padding: 10px; border-radius: 8px;'>
            {followup_reply}
        </div>
        """, unsafe_allow_html=True)
